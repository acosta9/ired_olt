basePath: /
definitions:
  models.ErrorResponse:
    properties:
      error: {}
    type: object
  models.SuccessResponse:
    properties:
      notice:
        type: string
      record: {}
    type: object
host: 127.0.0.1:7002
info:
  contact:
    email: juan9acosta@gmail.com
    name: Juan Acosta
    url: https://www.linkedin.com/in/juan-m-acosta-f-54219758/
  description: service in Go using Gin framework
  title: Olt Service API
  version: "1.0"
paths:
  /cron/olt-autowrite:
    get:
      consumes:
      - application/json
      description: run cron to write config to olt permanently
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BasicAuth: []
      summary: Run the task olt_autowrite
      tags:
      - Crons
  /cron/olt-cleaning:
    get:
      consumes:
      - application/json
      description: run cron to clean old data relating olt in DB
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BasicAuth: []
      summary: Run the task clean_olt_data
      tags:
      - Crons
  /cron/olt-getclock:
    get:
      consumes:
      - application/json
      description: run cron to get status of clock on all olts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BasicAuth: []
      summary: Run the task get_clock
      tags:
      - Crons
  /cron/olt-getinfo:
    get:
      consumes:
      - application/json
      description: run cron to get olts general info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BasicAuth: []
      summary: Run the task get_olt_info
      tags:
      - Crons
  /cron/onu-cleaning:
    get:
      consumes:
      - application/json
      description: run cron to clean old data relating to onus in DB
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BasicAuth: []
      summary: Run the task clean_onu_data
      tags:
      - Crons
  /cron/onu-getinfo:
    get:
      consumes:
      - application/json
      description: "run cron to get onus general info\n-onu-status \tevery 1min\n-onu-rx
        \t\t\tevery 5min\n-onu-sn \t\t\tevery 30min\n-onu-name \t\tevery 30min\n-onu-ethlist\tsinc
        manual\n-onu-tx \t\t\tsinc manual 30min"
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BasicAuth: []
      summary: Run the task get_onu_info
      tags:
      - Crons
  /cron/onu-traffic:
    get:
      consumes:
      - application/json
      description: run cron to get onus traffic info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BasicAuth: []
      summary: Run the task get_onu_traffic
      tags:
      - Crons
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
